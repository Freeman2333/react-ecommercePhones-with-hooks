import {
  ADD_PHONE_TO_BASKET,
  REMOVE_PHONE_FROM_BASKET,
  CLEAN_BASKET,
  GET_TOTAL_BASKET_PRICE
} from 'actionTypes'

export default (state, { type, payload }) => {
  switch (type) {
    case ADD_PHONE_TO_BASKET:
      let thePhone = state.basket.find(phone => phone.id === payload.id)
      if (thePhone) {
        const tempBasket = state.basket.map(item => {
          if (item.id===thePhone.id) {
            return {...thePhone, amount: item.amount+1}
          }else{ return item}
        })
        return {...state, basket: tempBasket}
      } else {
        const newPhoneInTheBasket = {...payload, amount: 1}
        return {...state, basket: [...state.basket, newPhoneInTheBasket]}
      }
    case GET_TOTAL_BASKET_PRICE:
      let {totalBasketPrice, totalBasketAmount} = state.basket.reduce((acc, phone) => {
        acc.totalBasketPrice += phone.price * phone.amount
        acc.totalBasketAmount += phone.amount
        return acc
      }, {totalBasketPrice: 0, totalBasketAmount:0})
      return {...state, totalBasketPrice,totalBasketAmount}
    case REMOVE_PHONE_FROM_BASKET:
      const tempBasket = state.basket.filter(phone => {
        return phone.id !== payload
      })
      return {...state, basket: tempBasket}
    case CLEAN_BASKET:
      return {...state, basket:[]}
    default:
      return state
  }
}
