import React, { createContext, useReducer, useEffect, useContext } from 'react'
import {MainContext} from './mainContext'
import basket_reducer from '../reducers/basket_reducer'

import {
  ADD_PHONE_TO_BASKET,
  REMOVE_PHONE_FROM_BASKET,
  CLEAN_BASKET,
  GET_TOTAL_BASKET_PRICE
} from 'actionTypes'

const getLocalStorage = () => {
  let basket = localStorage.getItem('basket')
  if (basket) {
    return JSON.parse(localStorage.getItem('basket'))
  } else {
    return []
  }
}

const initialState = {
  basket: getLocalStorage(),
  totalBasketPrice: 0
}

export const BasketContext = createContext()


const BasketProvider = ({children}) => {
  const [state, dispatch] = useReducer(basket_reducer, initialState)

  const {phones} = useContext(MainContext)

  const addPhoneToBasket = phone => {
    dispatch({
      type: ADD_PHONE_TO_BASKET,
      payload: phone
    }) 
  }

  const removePhoneFromBasket = id => {
    dispatch({
      type:  REMOVE_PHONE_FROM_BASKET,
      payload: id
    })
  }

  const cleanBasket = () => {
    dispatch({
      type: CLEAN_BASKET
    })
  }

  const basketCheckout = phones => {
    alert(JSON.stringify(phones))
  }

  useEffect(() => {
    localStorage.setItem('basket', JSON.stringify(state.basket))
    dispatch({
      type: GET_TOTAL_BASKET_PRICE
    })
  }, [state.basket]);
  return (
    <BasketContext.Provider value={{...state,addPhoneToBasket,removePhoneFromBasket, cleanBasket,basketCheckout}}>
      {children}
    </BasketContext.Provider>
  )
}

export default BasketProvider
